<?
//$Id$


function grabbit_contacts_add($edit,$nombre){
  $result = db_query("INSERT INTO {grabbit_contacts} (uid, mail, name) VALUES (%d, '%s', '%s')", $edit->inviter->uid, $edit->email, $nombre);
}

function grabbit_contacts_have_contacts($user){
	$result = db_query("SELECT * from {grabbit_contacts} where uid=%d",$user);
	
	if (db_affected_rows($result)){
		return TRUE;
	}else{
		return FALSE;
	}
}

function grabbit_contacts_send_messages($user,$message){
	
	$sql  = db_query("SELECT i.email, i.invitee AS uid, u.name, i.created, i.expiry, i.joined, i.canceled FROM {invite} i LEFT JOIN {users} u ON (u.uid = i.invitee AND u.uid <> 0) WHERE i.uid = %d AND i.joined=''",$user->uid);
	while($contact = db_fetch_object($sql)){
		$params['contact'] = $contact;
		$params['message'] = $message;
		$params['user'] = $user->name;
		drupal_mail('grabbit_contacts', 'update', $contact->email, user_preferred_language($user), $params);
	}
}

function grabbit_contacts_mail($key, &$message, $params) {

  switch($key) {
    case 'update':
    $message['subject'] = t('Status update from '.$params['user'].' on Grabbit.net');
    $message['body'][] = t("The user ".$params['user']." has updated his/her status on grabbit, 
                            you received this notification because you are a grabbit contact, 

                            Join Grabbit http://grabbit.biz/user to receive this notifications on grabbit.net!.

                            ".$params['message']);
  break;
  }
}



function grabbit_contacts_list(){
	global $user;
	$account = $user->uid;
	$now = time();
	  $status_sort = '';
	  if (isset($_GET['order']) && $_GET['order'] == t('Status')) {
	    $sort = db_escape_string($_GET['sort']);
	    if ($_GET['sort'] == 'asc') {
	      $status_sort = "IF(i.joined != 0, 0, 1) $sort, IF(i.expiry < $now, 0, 1) $sort, i.canceled";
	    }
	    else {
	      $status_sort = "i.canceled $sort, IF(i.expiry < $now, 0, 1) $sort, IF(i.joined != 0, 0, 1)";
	    }
	  }
	  $header = array(
	    array('data' => t('E-mail')),
	    array('data' => t('Name')),
	    array('data' => t('Grabbit Username')),
	    array('data' => t('Created')),
	    array('data' => t('Status')),
	  );

	  $output = '';
	  $filter = $filter_args = NULL;
	  if (isset($_GET['filter']) && $_GET['filter'] != '') {
	    $filter = " AND LOWER(u.name) LIKE '%s%%'";
	    $filter_args = $_GET['filter'];
	    $output .= drupal_get_form('invite_admin_details_filter_form', $account, $_GET['filter']);
	  }
	  $sql  = "SELECT DISTINCT i.email, i.invitee AS uid, u.name, i.created, i.expiry, i.joined, i.canceled, c.name AS names, c.mail FROM {invite} i LEFT JOIN {users} u ON (u.uid = i.invitee AND u.uid <> 0) LEFT JOIN {grabbit_contacts} c ON c.mail=i.email WHERE i.uid = %d". $filter;
	  $sql .= tablesort_sql($header);
	  $result = pager_query($sql, 50, 0, NULL, $account, $filter_args);
	  $rows = array();

	  while ($row = db_fetch_object($result)) {
	    $cells = array();
	    $cells[] = check_plain($row->email);
	    $cells[] = $row->names;
	    $cells[] = $row->joined ? theme('username', $row) : '';
	    $cells[] = format_date($row->created, 'custom', 'Y-m-d');
	    $cells[] = $row->canceled ? t('Withdrawn') : ($row->joined ? t('Joined') : ($row->expiry < $now ? t('Expired') : t('Pending')));
	    $rows[] = $cells;
	  }

	  $output .= theme('table', $header, $rows, array('id' => 'invite'));
	  if (!$rows) {
	    $output .= t('No invitees found.');
	  }
	  else {
	    $output .= theme('pager', array(), 50, 0);
	  }
	
	return $output;
}