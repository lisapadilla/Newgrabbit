<?php


/**
 * Implementation of hook_block()
 */
function friend_search_block($op = 'list', $delta = 0, $edit = array()) {
  switch($op) {
    case 'list':
      $blocks[0]['info'] = t('Friend Search');
      $blocks[1]['info'] = t('Search Content');
      $blocks[2]['info'] = t('Status Form');
      $blocks[3]['info'] = t('Login homepage');
      return $blocks;
      break;
    case 'view':
      switch ( $delta )
      {
		case 0:
          $blocks['title'] = 'Are this people yor friends?';
          $blocks['content'] = drupal_get_form('friend_search_people_form');

          break;
		case 1:
          $blocks['title'] = 'Search Content';
          $blocks['content'] = drupal_get_form('search_form');
          	
          break;
		case 2:
          $blocks['content'] = '<div class="panels-update-form">
		             <div class="panels-update-wraper">'.drupal_get_form('facebook_grabbit_update_form');
		
          $blocks['content'] .= '<div class="upload_button_expand exeded-hidden" id="article-indicator" style="display:none"><span class="overloaded">Your message will be trimmed to 140 chars. with a link to full post.</span></div>
                                 <div class="controls-links-front">
                                   <div class="upload_button_expand"><a href="#">&raquo; Upload file</a></div>
                                   <div class="upload_button_expand_tags"><a href="#">&raquo; Add tags</a></div>
                                 </div>
                                 <div class="panels-update-form_file" style="display:none">
                                 <div id="swfupload-control">  
							       <p>Select a file (jpeg, bmp, jpg, png, gif, mov, flv, mp3, pdf, doc, rtf, txt, csv, ppt, xls) having maximum size of 1MB</p>  
							       <input type="button" id="button" />  
							       <p id="queuestatus" ></p>  
							       <ol id="log"></ol>  
							     </div> 
				                </div>
				                 <div id="tags-control" style="display:none;">
				                   <p>Add a comma separated list of tags.</p>
							       <input name="tags-on-post" id="tags-on-post" type="textfield" size="81" class="form-text-content">
							     </div
				                </div>
       		           </div>';	
		
          break;
          case 3:
            $blocks['content']='<div class="panels-update-wraper">
                                  <div class="panels-update-wraper">
                                    <div class="welcome"><span class="title-welcome">Welcome!</span>
                                      <span class="welcome-body">Join grabbit and share everything with everybody you want to know. Want it? Grabbit!</span>
                                    </div>
                                    <div class="join-now">
                                     <div class="join-now-inner">
                                      <span class="main-title">Join now!</span> <span class="normal">Create your account, add Facebook and Twitter updates, mail, news and people.</span>
                                      <div class="images"><span class="left"><img src="'.base_path().'sites/all/themes/grabbit/images/various/logos.gif" /></span>
                                      <span class="right"><a href="'.base_path().'user/register"><img src="'.base_path().'sites/all/themes/grabbit/images/various/signup.gif" /></a></span></div>
                                     </div> 
                                     </div>
                                    <div class="login-now"><span class="member">Already a member?</span>
                                      '.drupal_get_form('user_login').'
                                    </div>
                                  </div>
                                </div>';
          break;
      }
      return $blocks;
      break;
  }
}


/**
 * Implementation of hook_menu()
 */
function friend_search_menu()
{
  $items['user/search'] = array( 
    'title' => 'Find People', 
    'page callback' => 'friend_search_page', 
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  ); 

  $items['user/%/myfriends'] = array( 
    'title' => 'Friends', 
    'page callback' => 'friend_search_show_friends', 
 	'page arguments' => array(1),
    'load arguments' => array('%map', '%index'),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK
  );

  $items['user/%/myfriends/grabbit_friends'] = array( 
    'title' => 'Grabbit Friends', 
    'page callback' => 'friend_search_show_friends_grabbit', 
 	'page arguments' => array(1),
    'load arguments' => array('%map', '%index'),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK
  );

  $items['user/%/myfriends/facebook_friends'] = array(
   'title' => 'Facebook Friends',
   'page callback' => 'friend_search_show_friends_facebook',
   'access arguments' => array('access content'),
   	'page arguments' => array(1),
    'load arguments' => array('%map', '%index'),
   'weight' => 9,
   'type' => MENU_LOCAL_TASK,
  );

  $items['user/%/myfriends/twitter_friends'] = array(
   	'title' => 'Twitter Friends',
  	'page callback' => 'friend_search_show_friends_twitter',
	   'access arguments' => array('access content'),
	   	'page arguments' => array(1),
	    'load arguments' => array('%map', '%index'),
	   'weight' => 9,
	   'type' => MENU_LOCAL_TASK,
	  );

  $items['user/%/myfriends/viewfriends'] = array(
    'title' => 'Grabbit Friends',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'load arguments' => array('%map', '%index'),
  );

  $items['user/%/myfriends/view_contacts'] = array(
   'title' => 'Contacts',
   'description' => t('These are the contacts you imported/invited from other networks/emails.'),
   'page callback' => 'friend_search_contact_list',
   'access arguments' => array('access content'),
   	'page arguments' => array(1),
    'load arguments' => array('%map', '%index'),
   'weight' => 13,
   'type' => MENU_LOCAL_TASK,
  );
  

  return $items;
}

function friend_search_show_friends_facebook(){
	global $user;
	
	drupal_add_js(drupal_get_path('module', 'friend_search').'/engine.js', $type = 'module');

	$fuser = facebook_grabbit_get_fid($user->uid);
	$profile = content_profile_load('profile', $user->uid);
	
	if ($fuser){
		$module_name='facebook_grabbit';
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook.php");
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook_desktop.php");
	  include(drupal_get_path('module', $module_name)."/facebook/config.php");

	  $suser=$fuser->fid;
	  $session_key=$fuser->kid;
      try{
	
	    $facebook = new FacebookDesktop($api_key, $secret);
	
	    if ($facebook->set_user($suser, $session_key) != null){
		  drupal_set_message("Facebook connection failed","error");
	    }
	    else{
		 
	      $friends =  $facebook->api_client->call_method('Friends.get', array('api_key' => $api_key,
									       'uid'=>"$suser")); 
		
		  $uids = implode(", ",$friends);						
		  $details = $facebook->api_client->call_method('Users.getInfo', array('api_key' => $api_key,
																       'uids'=>$uids,
																        'fields'=>'last_name, first_name, pic_small'));
		$rowx='odd';	
		foreach($details as $amigo_facebook){
			
			$facebooks .=friend_search_theme_a_friend($amigo_facebook,$rowx);
			
						if($rowx=='even'){
							$rowx='odd';
						}else{
							$rowx='even';
						}
		}
									
	    $output .='<div class="facebook-list"><h2>Facebook Friends</h2><div class="facebook-container"><div class="grabb-control-buttons" id="rss-controls"><span><a href="#" class="all-friends-button selected">All friends</a></span><span><a href="#" class="g-friends-button">Grabbit friends</a></span></div>'.$facebooks.'</div></div>';
	  }
	}catch(FacebookRestClientException $e){
		$output .='<div class="facebook-list"><h2>Facebook Friends</h2><div class="facebook-container"><div class="tw-container-inner">You have no FB account yet</div></div></div>';
	}
    }else{
	    $output .='<div class="facebook-list"><div class="facebook-container"><div class="tw-container-inner">You have no FB account yet</div></div></div>';
    }

	
	return $output;

	
}

function friend_search_get_friends_facebook(){
	global $user;

	$fuser = facebook_grabbit_get_fid($user->uid);
	$profile = content_profile_load('profile', $user->uid);
	
	if ($fuser){
		$module_name='facebook_grabbit';
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook.php");
	  require_once(drupal_get_path('module', $module_name)."/facebook/facebook_desktop.php");
	  include(drupal_get_path('module', $module_name)."/facebook/config.php");

	  $suser=$fuser->fid;
	  $session_key=$fuser->kid;
      try{
	
	    $facebook = new FacebookDesktop($api_key, $secret);
	
	    if ($facebook->set_user($suser, $session_key) != null){
		  drupal_set_message("Facebook connection failed","error");
	    }
	    else{
		 
	      $friends =  $facebook->api_client->call_method('Friends.get', array('api_key' => $api_key,
									       'uid'=>"$suser")); 
		
		  $uids = implode(", ",$friends);						
		  $details = $facebook->api_client->call_method('Users.getInfo', array('api_key' => $api_key,
																       'uids'=>$uids,
																        'fields'=>'last_name, first_name, pic_small'));
	     return $details;
	   }
	  }
	  catch(FacebookRestClientException $e){
		return array();
	  }
    }else{
	  return array();
    }
	
}


function friend_search_get_friends_twitter(){
    global $user;
    $accounts = oauth_twitter_get_uid($user->uid);
    
	if($accounts){
		$module_name='facebook_grabbit';
		include_once(drupal_get_path('module', $module_name).'/includes/EpiCurl.php');
		include_once(drupal_get_path('module', $module_name).'/includes/EpiOAuth.php');
		include_once(drupal_get_path('module', $module_name).'/includes/EpiTwitter.php');
		include_once(drupal_get_path('module', $module_name).'/includes/secret.php');

		try{
        	$twitterObj = new EpiTwitter($consumer_key, $consumer_secret);
			$twitter_account = oauth_twitter_get_uid($user->uid);
			$token = unserialize($twitter_account->config);
			$twitterObj->setToken($token['token'], $token['secret']);
			 $twitterInfo2= $twitterObj->get_accountVerify_credentials();  
			 $twit_id = $twitterInfo2->screen_name;
			
			$twitterFriends = $twitterObj->get_statusesFriends(array('screen_name' => $twit_id));
			
			return $twitterFriends->response;
	     }
	     catch(EpiOAuthBadRequestException $e){  
	        drupal_set_message("Connection error Twitter","error");
	     }catch(EpiOAuthUnauthorizedException $e){  
	        drupal_set_message("Error in Twitter","error");
	     }catch(EpiOAuthException $e){  
	        drupal_set_message("Ooops! some strange error with twitter, maybe fail wale!","error");
	     }
	
	}else{
		return array();
	}
	
}

function parseArrayToObject($array) {
   $object = new stdClass();
   if (is_array($array) && count($array) > 0) {
      foreach ($array as $name=>$value) {
         $name = strtolower(trim($name));
         if (!empty($name)) {
            $object->$name = $value;
         }
      }
   }
   return $object;
}


function friend_search_show_friends_twitter(){
    global $user;
    $accounts = oauth_twitter_get_uid($user->uid);

	if($accounts){
		$module_name='facebook_grabbit';
		include_once(drupal_get_path('module', $module_name).'/includes/EpiCurl.php');
		include_once(drupal_get_path('module', $module_name).'/includes/EpiOAuth.php');
		include_once(drupal_get_path('module', $module_name).'/includes/EpiTwitter.php');
		include_once(drupal_get_path('module', $module_name).'/includes/secret.php');
		

		drupal_add_js(drupal_get_path('module', 'friend_search').'/engine.js', $type = 'module');
		
		try{
        	$twitterObj = new EpiTwitter($consumer_key, $consumer_secret);
			$twitter_account = oauth_twitter_get_uid($user->uid);
			$token = unserialize($twitter_account->config);
			$twitterObj->setToken($token['token'], $token['secret']);
			 $twitterInfo2= $twitterObj->get_accountVerify_credentials();  
			 $twit_id = $twitterInfo2->screen_name;

			$twit_id = $twitterInfo2->screen_name;

			$twitterFriends = $twitterObj->get_statusesFriends(array('screen_name' => $twit_id));

			$unser = $twitterFriends->response;
			
			$rowx="odd";
			foreach($unser as $twitter){
		            $twitter=parseArrayToObject($twitter);
		       		$twitters .=friend_search_theme_a_friend($twitter,$rowx);

								if($rowx=='even'){
									$rowx='odd';
								}else{
									$rowx='even';
								}
			  
			}
	     }
	     catch(EpiOAuthBadRequestException $e){  
	        drupal_set_message("Connection error Twitter","error");
	     }catch(EpiOAuthUnauthorizedException $e){  
	        drupal_set_message("Error in Twitter","error");
	     }catch(EpiOAuthException $e){  
	        drupal_set_message("Ooops! some strange error with twitter, maybe fail wale!","error");
	     }
	
	  $output .='<div class="twitter-list"><h2>Twitter Following</h2><div class="twitter-container"><div class="grabb-control-buttons" id="rss-controls"><span><a href="#" class="all-friends-button selected">All friends</a></span><span><a href="#" class="g-friends-button">Grabbit friends</a></span></div>'.$twitters.'</div></div>';	
	}else{
		$output .='<div class="facebook-list"><div class="facebook-container"><div class="tw-container-inner">You have no Twitter account yet</div></div></div>';
	}
	
	return $output;
	
}

function friend_search_contact_list(){
	$contacts = grabbit_invites_get_contacts();
	$row='views-row-odd';
	foreach($contacts as $contact){
		
	  	$contacters .= friend_search_theme_a_friend($contact,$row);
		
		if($row=='views-row-odd'){
			$row='views-row-even';
		}else{
			$row='views-row-odd';
		}
			
	}
	
    $output .='<div class="twitter-list"><div class="twitter-container">'.$contacters.'</div></div>';

	return $output;
}

function friend_search_show_friends(){
	
	global $user;
	
	drupal_add_js(drupal_get_path('module', 'friend_search').'/engine.js', $type = 'module');

    $friends=array();
    $display_id = 'page_1';
    // get grabbit friends	
	$view = views_get_view('friends');
    $view->set_display($display_id);
    $view->execute();

	foreach($view->result as $friend){
	  $friend_object = content_profile_load('profile', $friend->users_friendlist_relations_uid);
	  $friends[$friend->users_friendlist_relations_name . ' g']=$friend_object;
	}
	// end grabbit friends
	
	//get facebook friends

	$facebook=friend_search_get_friends_facebook();
	foreach ($facebook as $facebook_friend){
	  $friends[$facebook_friend['first_name'].$facebook_friend['last_name'].' f']=$facebook_friend;
	}
	//end facebook friends
	
	//get twitter friends
	$twitter=array();
	$twitter=friend_search_get_friends_twitter();
	foreach ($twitter as $twitter_friend){
		$twitter_friend=parseArrayToObject($twitter_friend);
		$friends[$twitter_friend->screen_name ." t"]=$twitter_friend;
	}
	//endf teitter friends
	
	//get contacts
	$contacts=array();
	$contacts=grabbit_invites_get_contacts();
	foreach ($contacts as $contact){
		$friends[$contact->email.' c']=$contact;
	}
	//end contacts
	
	ksort($friends);
	
	$mesa=drupal_get_messages();
	if($mesa['status'][0])
	  $mensajes = '<div class="messages-status-updates">'.$mesa['status'][0].'</div>';
	
    $output ='<div class="grabbit-list"><h2>All Friends</h2><div class="grabbit-container">'.$mensajes.'<div class="grabb-control-buttons" id="rss-controls"><span><a href="#" class="all-friends-button selected">All friends</a></span><span><a href="#" class="g-friends-button">Grabbit friends</a></span></div>';
    $row='views-row-odd';
    foreach($friends as $friend){
	  $output .= friend_search_theme_a_friend($friend,$row);
	  	if($row=='views-row-odd'){
			$row='views-row-even';
		}else{
			$row='views-row-odd';
		}
    }

    $output .='</div></div>';
	
	return $output;
}

function friend_search_theme_a_friend($friend,$row){
	$class="not-grabbit";
	if(is_array($friend)){ //if its facebook friend
		if(module_exists('grabbit_invites')){
			$suser=grabbit_invites_check_facebook_user($friend);
			if($suser!=0){
				$link='<span class="joined-link">'.$suser['joined'].'</span> &raquo; ';
				$link .="<span class='joined-status'>".$suser['friends'].'</span>';
				$link .="<span class='joined-action'>".$suser['action']."</span>";
				$link .=$suser['favs'];
				$class="joined-grabbit";
				$link_class=$suser['class'];
			}else{
			  	if(!$invited=grabbit_invites_get_invited($friend['first_name'].'_'.$friend['last_name'])){
				  	$link='<span class="joined-link">Not a Grabbit member</span> &raquo; ';
					$link .="<span class='joined-action'>".l('send invitation...','grabbit/invite/facebook/'.$friend['uid']."/".$friend['first_name']."_".$friend['last_name']."/", array('attributes'=>array('class'=>'thickbox'),'query'=>'KeepThis=true&TB_iframe=true&height=100&width=200'))."</span>";
					$link_class='no-invite';
					$extra="<span class='action-button'>".l('send invitation...','grabbit/invite/facebook/'.$friend['uid']."/".$friend['first_name']."_".$friend['last_name']."/", array('attributes'=>array('class'=>'thickbox'),'query'=>'KeepThis=true&TB_iframe=true&height=100&width=200'))."</span>";			
				}else{
					if($invited!=2){
				 	  $link='<span class="joined-link">Invited</span> &raquo; ';
					  $link .='<span class="joined-status">Your invitation is pending</span> &raquo; ';
					  $link .='<span class="joined-action">'.l('cancel invitation...','invite/withdraw/pending/'.$invited,array('query'=>drupal_get_destination()))."</span>";
					  $link_class='invite-pending';	
					}elseif($invited=2){
					  $link='Joined grabbit';
					  $class="joined-grabbit";
					}			
				}	
			}
			
		}
		$name=$friend['first_name']." ".$friend['last_name'];
		$picture = '<img src="'.$friend['pic_small'].'" width="48px"/>';
		$social .='<span class="from-facebook"><img src="'.base_path().path_to_theme().'/images/various/facebook_ico_sml.gif" alt="Facebook Account" /></span>';
	  }
	  elseif($friend->screen_name){ //if its twitter friend
		$name=$friend->screen_name;
		$picture='<img width="48px" src="'.$friend->profile_image_url.'" />';
		if(module_exists('grabbit_invites')){
			$suser=grabbit_invites_check_twitter_user($friend);
			if($suser!=0){
				$link='<span class="joined-link">'.$suser['joined'].'</span> &raquo; ';
				$link .="<span class='joined-status'>".$suser['friends'].'</span>';
				$link .="<span class='joined-action'>".$suser['action']."</span>";
				$link .=$suser['favs'];
				$class="joined-grabbit";
				$link_class=$suser['class'];
			}else{
			  if(!$invited=grabbit_invites_get_invited($friend->screen_name)){
				$link='<span class="joined-link">Not a Grabbit member</span> &raquo; ';
				$link .="<span class='joined-action'>".l('send invitation...','grabbit/invite/twitter/'.$friend->screen_name."/", array('attributes'=>array('class'=>'thickbox'),'query'=>'KeepThis=true&TB_iframe=true&height=100&width=200'))."</span>";
				$link_class='no-invite';
				$extra ="<span class='action-button'>".l('send invitation...','grabbit/invite/twitter/'.$friend->screen_name."/", array('attributes'=>array('class'=>'thickbox'),'query'=>'KeepThis=true&TB_iframe=true&height=100&width=200'))."</span>";
			  }else{
				if($invited!=2){
				  $link='<span class="joined-link">Invited</span> &raquo; ';
				  $link .='<span class="joined-status">Your invitation is pending</span> &raquo; ';
				  $link .= '<span class="joined-action">'.l('cancel invitation','invite/withdraw/pending/'.$invited,array('query'=>drupal_get_destination()))."</span>";
				  $link_class='invite-pending';	
				}elseif($invited=2){
				  $link='Joined grabbit';
				  $class="joined-grabbit";
				}
			  }
			}
		}
		$social='<span class="from-twitter"> <img src="'.base_path().path_to_theme().'/images/various/twitter_ico_sml.gif" alt="Twitter Account" /></span>';
	  }
	  elseif($friend->nid){ //if its grabbit friend
	    $picture=l(theme('imagecache', 'friend_thumbnail', $friend->field_profile_picture[0]['filepath'], $friend->name),'users/'.$friend->name,array('html'=>TRUE));
		$name=l($friend->name,'users/'.$friend->name);
		$link='<span class="joined-link">'.l('Joined Grabit!','users/'.$friend->name).'</span> &raquo; ';
		$link .="<span class='joined-status'><strong>You are Grabbit friends!</strong></span> &raquo; ";
		$link .='<span class="joined-action">'.l('remove from friends', 'friendlist/delete/'.$friend->uid.'/1',array('query'=>'destination=user/me/myfriends')) .'</span>';
		if(grabbit_favorites_get('friend',$friend->uid)){
		  	$link .='<span class="flag-wrapper flag-bookmarks"><a href="JavaScript:void(0);" class="friend_favorite-remove friend-action" uid="'.$friend->uid.'">Add to favorites</a></span>';	
		}else{
			$link .='<span class="flag-wrapper flag-bookmarks"><a href="JavaScript:void(0);" class="friend_favorite friend-action" uid="'.$friend->uid.'">Remove from favorites</a></span>';
		}
		$class="joined-grabbit grabbit-fr";
		$link_class='grabbit-friends';			
	  }
	
	  elseif($friend->reg_code){ // Its a contact!
		$picture='<img src="'.base_path().path_to_theme().'/images/default/default_profile.jpg" width="48px" />';
		$name=$friend->email;
		if($friend->joined){
			$link='<span class="joined-link">Joined Grabbit!</span> &raquo; ';
			$class="joined-grabbit";
			$link .="<span class='joined-status'><strong>".$friend->friends."</strong></span>";
			$link_class=$friend->link_class;
		}else{
			$link='<span class="joined-link">Invited</span> &raquo; ';
			$link .='<span class="joined-status">Your invitation is pending</span> &raquo; ';
			$link .= "<span class='joined-action'>".l('cancel invitation','invite/withdraw/pending/'.$friend->reg_code,array('query'=>drupal_get_destination()))."</span>";
			$link_class='invite-pending';
		}
		$social .='<span class="from-facebook"><img src="'.base_path().path_to_theme().'/images/various/gmail.jpg" alt="Facebook Account" width="15px" /></span>';
	  }
	
	
	$output = '<div class="views-row views-row-1 '.$row.' '.$class.'">
	   
      <div class="frostin-wrapper">
	  <div class="views-field-field-profile-picture-fid">
	    <span class="field-content">'.$picture.'</span>
	  </div>
	
	  <div class="views-field-action-socital-networks">
	    <span class="field-content">'.$social.'</span>
	  </div>
	  </div>
	  <span class="views-field-name">
	    <span class="field-content">'.$name.'</span>
	  </span>

	  <div class="views-field-last-update-time">
	    <span class="field-content"/>
	  </div>

	  <div class="views-field-action-link-requestee '.$link_class.'">
	    '.$extra.'
	    <span class="field-content">'.$link.'</span>
	  </div>
	  </div>';
	
	return $output;
}

function friend_search_show_friends_grabbit(){
	
	global $user;
	
	drupal_add_js(drupal_get_path('module', 'friend_search').'/engine.js', $type = 'module');
	
	$view = views_get_view('friends');
    $display_id = 'page_1';
    $view->set_display($display_id);	

    $output ='<div class="grabbit-list"><h2>Grabbit Friends</h2><div class="grabbit-container">'.$view->render().'</div></div>';

	
	return $output;
}

/**
 * Retrieves and displays page view
 */
function friend_search_page()
{
  $view = views_get_view('friend_search');
  
  $view->use_ajax = TRUE;
  $display_id = 'default';
  $view->set_display($display_id);
  $view->is_cacheable = FALSE;
  
  if ($_GET['username'])
  {
    $item = $view->get_item($display_id, 'filter', 'title');
    $item['value'] = $_GET['username'];
    unset($_GET['username']);
    
    $view->set_item($display_id, 'filter', 'title', $item);
  }
  
  return $view->render();
}

/**
 * Implementation of hook_form() for find people
 */
function friend_search_people_form($form_state){
	
  	$form['username'] = array(
	    '#type' => 'textfield',
	    '#size' => 60,
	    '#maxlength' => 255,
	    '#required' => true );

	$form['submit'] = array(
	    '#type' => 'submit',
	    '#value' => t('Search'),
	    '#weight'=>10
	);	
	
	$form['#action'] = url('user/search');
	
	$form['#method'] = 'get';
	
  return $form;
}

/**
 * Implementation of hook_menu_alter() to customize search
 */
function friend_search_menu_alter(&$items) {
    unset($items['search/user/%menu_tail']); // So the Tab "Users" doesnt appear in the search page
}

function friend_search_form_alter(&$form, $form_state, $form_id){
	if($form_id=='user_login' && drupal_is_front_page()){
	  $form['#redirect']='user/login';
	}
}

function friend_search_user($op, &$edit, &$account, $category = NULL){
	if($op=='login'){
		drupal_goto('stream/user');
	}
}

function friend_search_preprocess_views_view_fields(&$vars) {
	
    if($vars['fields']['field_profile_picture_fid']){
	  if(stristr($vars['fields']['field_profile_picture_fid']->content, '<img') === FALSE){
		$new_content=str_replace('</a>','',$vars['fields']['field_profile_picture_fid']->content);
	    $vars['fields']['field_profile_picture_fid']->content=$new_content.'<img src="'.base_path().'sites/all/themes/grabbit/images/default/default_profile.jpg" /></a>';
	  }else{
		  if($vars['fields']['field_profile_picture_fid']->content=='<img src="http://grabbit.biz/sites/default/files/imagecache/friend_thumbnail/imagefield_default_images/usr3.jpg" alt="" title=""  class="imagecache imagecache-friend_thumbnail imagecache-default imagecache-friend_thumbnail_default" />')
		    $vars['fields']['field_profile_picture_fid']->content='<img src="'.base_path().'sites/all/themes/grabbit/images/default/default_profile.jpg" />';
	  }
	  
    }
}